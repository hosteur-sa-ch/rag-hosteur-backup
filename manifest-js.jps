version: 0.1
type: update
id: ragbackup-addon
name: Ragnarokkr Backup for Hosteur S3 Bucket

categories:
- apps/dev-and-admin-tools

targetNodes:
  nodeType:
    - tomcat6
    - tomcat7
    - tomcat8
    - tomcat85
    - tomcat9
    - tomcat
    - tomee
    - tomee-dockerized
    - glassfish3
    - glassfish4
    - glassfish
    - jetty
    - jetty6
    - apache
    - apache2
    - nginxphp
    - apache2-ruby
    - nginx-ruby
    - nginx-dockerized
    - nginxphp-dockerized
    - nodejs
    - apache-ruby
    - apache-python
    - nginxruby
    - litespeedphp
    - litespeedadc
    - lemp
    - llsmp

homepage: https://github.com/hosteur-sa-ch/rag-hosteur-backup
baseUrl: https://raw.githubusercontent.com/hosteur-sa-ch/rag-hosteur-backup/main
logo: images/ragbackup.png

description:
  text: /text/description.md
  short: Create files backup on S3 Hosteur Bucket for your environement.

globals:
  env: ${env.name}
  node: ${targetNodes[0].id}

settings:
  fields:
    - type: string
      name: s3ak
      caption: Hosteur S3 Account Key
      placeholder: Your Hosteur S3 AK
      required: true
    - type: string
      name: s3sk
      caption: Hosteur S3 Secret Key
      placeholder: Your Hosteur S3 SK
      required: true
    - type: string
      name: s3bucket
      caption: Hosteur S3 Bucket Name
      default: mybucketbackup
      required: true
    - type: string
      name: s3bucketpass
      caption: Bucket Password
      placeholder: Secure your backup with a password (don't loose it)
      required: true

buttons:
  - confirmText: Start manual backup now?
    loadingText: Backuping ...
    action: backup
    caption: Backup Now
    successText: /text/success.md
  - caption: Configure
    settings: main
    action: configure

onInstall:
  - setGlobals:
      nodeId: ${settings.nodeId:}
      nodeGroup: ${targetNodes.nodeGroup:}
      withExtIp: ${settings.withExtIp:true}
      webroot: ${settings.webroot:}
      webrootPath: ${settings.webrootPath:}
      fallbackToX1: ${settings.fallbackToX1:}
      deployHook: ${settings.deployHook:}
      deployHookType: ${settings.deployHookType:}
      undeployHook: ${settings.undeployHook:}
      undeployHookType: ${settings.undeployHookType:}
      test: ${settings.test:}
    - restic-deploy
    - installScript

onUninstall:
  - callScript:
      action: uninstall
  - delete

onBeforeDelete: delete

actions:
  installScript:
    script: /scripts/create-installation-script.js?_r=${fn.random}
    params:
      scriptName: ${env.envName}-${targetNodes.nodeGroup}-${globals.scriptSufix}
      baseUrl: ${baseUrl}
      cronTime: 0 2 * * *
      customDomains: ${settings.customDomains}
      nodeId: ${globals.nodeId}
      nodeGroup: ${globals.nodeGroup}
      deployHook: ${globals.deployHook}
      deployHookType: ${globals.deployHookType}
      undeployHook: ${globals.undeployHook}
      undeployHookType: ${globals.undeployHookType}
      withExtIp: ${globals.withExtIp}
      webroot: ${globals.webroot}
      webrootPath: ${globals.webrootPath}
      fallbackToX1: ${globals.fallbackToX1}
      test: ${globals.test}
      clientVersion: ${globals.version_acme-sh:}
  callScript:
    script: |
      var j = jelastic, resp = j.dev.scripting.Eval(appid, session, '${env.envName}-${targetNodes.nodeGroup}-${globals.scriptSufix}', {action:'${this.action}'});
      if (resp.result == 0 && typeof resp.response === 'object' && resp.response.result != 0) resp = resp.response;
      return resp;
  delete:
    script: |
      jelastic.dev.scripting.DeleteScript('${env.envName}-${targetNodes.nodeGroup}-${globals.scriptSufix}');
      return {result:0}

    restic-deploy:
        - cmd[${targetNodes.nodeGroup}]: |-
            yum install yum-plugin-copr -y
            yum copr enable copart/restic -y
            yum install restic -y
          user: root

    restic-init:
        - cmd[${targetNodes.nodeGroup}]: |-
            export AWS_ACCESS_KEY_ID=${settings.s3ak}
            export AWS_SECRET_ACCESS_KEY=${settings.s3sk}
            export HST_RESTIC_BUCKET=${settings.s3bucket}
            export RESTIC_PASSWORD=${settings.s3bucketpass}
            restic -r s3:s3.hosteur.io/${settings.s3bucket} init
          user: root